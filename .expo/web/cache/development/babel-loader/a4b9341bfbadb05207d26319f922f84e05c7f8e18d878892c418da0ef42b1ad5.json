{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { getDatabase, ref, set } from 'firebase/database';\nimport { useNavigation } from '@react-navigation/native';\nimport { db } from \"../database/firebaseConfig\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MisClientes = function MisClientes() {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    clientes = _useState2[0],\n    setClientes = _useState2[1];\n  useEffect(function () {\n    var clientesRef = db.ref('abogados/clientes/usuario');\n    clientesRef.on('value', function (snapshot) {\n      setClientes(snapshot.val());\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      children: clientes.map(function (cliente, i) {\n        return _jsxs(View, {\n          style: styles.card,\n          children: [_jsx(Text, {\n            style: styles.text,\n            children: cliente.nombre\n          }), _jsx(Text, {\n            style: styles.text,\n            children: cliente.email\n          }), _jsx(Text, {\n            style: styles.text,\n            children: cliente.telefono\n          }), _jsx(Text, {\n            style: styles.text,\n            children: cliente.observaciones\n          })]\n        }, i);\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  card: {\n    margin: 10,\n    backgroundColor: '#ccc',\n    padding: 10\n  },\n  text: {\n    fontSize: 16\n  }\n});\nexport default MisClientes;","map":{"version":3,"names":["React","useState","useEffect","View","Button","TextInput","ScrollView","StyleSheet","getDatabase","ref","set","useNavigation","db","jsx","_jsx","jsxs","_jsxs","MisClientes","navigation","_useState","_useState2","_slicedToArray","clientes","setClientes","clientesRef","on","snapshot","val","style","styles","container","children","map","cliente","i","card","Text","text","nombre","email","telefono","observaciones","create","flex","backgroundColor","margin","padding","fontSize"],"sources":["/home/aboroa/Documentos/Taller de Integracion IV/Proyecto/TI4_ProyectoAbogados/screens/MisClientes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Button, TextInput, ScrollView, StyleSheet} from 'react-native';\nimport { getDatabase, ref, set } from 'firebase/database';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { db } from '../database/firebaseConfig';\n\nconst MisClientes = () => {\n  const navigation = useNavigation();\n\n  const [clientes, setClientes] = useState([]);\n\n  useEffect(() => {\n    // Obtener la referencia a la base de datos de clientes\n    const clientesRef = db.ref('abogados/clientes/usuario');\n\n    // Escuchar los cambios en la base de datos\n    clientesRef.on('value', (snapshot) => {\n      // Actualizar el estado de clientes con los datos de la base de datos\n      setClientes(snapshot.val());\n    });\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n        {clientes.map((cliente, i) => (\n          <View key={i} style={styles.card}>\n            <Text style={styles.text}>{cliente.nombre}</Text>\n            <Text style={styles.text}>{cliente.email}</Text>\n            <Text style={styles.text}>{cliente.telefono}</Text>\n            <Text style={styles.text}>{cliente.observaciones}</Text>\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  card: {\n    margin: 10,\n    backgroundColor: '#ccc',\n    padding: 10,\n  },\n  text: {\n    fontSize: 16,\n  },\n});\n\nexport default MisClientes;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,WAAW,EAAEC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;AACzD,SAASC,aAAa,QAAQ,0BAA0B;AAExD,SAASC,EAAE;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAMC,UAAU,GAAGP,aAAa,CAAC,CAAC;EAElC,IAAAQ,SAAA,GAAgClB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5BlB,SAAS,CAAC,YAAM;IAEd,IAAMsB,WAAW,GAAGZ,EAAE,CAACH,GAAG,CAAC,2BAA2B,CAAC;IAGvDe,WAAW,CAACC,EAAE,CAAC,OAAO,EAAE,UAACC,QAAQ,EAAK;MAEpCH,WAAW,CAACG,QAAQ,CAACC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OACEb,IAAA,CAACX,IAAI;IAACyB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BjB,IAAA,CAACR,UAAU;MAAAyB,QAAA,EACRT,QAAQ,CAACU,GAAG,CAAC,UAACC,OAAO,EAAEC,CAAC;QAAA,OACvBlB,KAAA,CAACb,IAAI;UAASyB,KAAK,EAAEC,MAAM,CAACM,IAAK;UAAAJ,QAAA,GAC/BjB,IAAA,CAACsB,IAAI;YAACR,KAAK,EAAEC,MAAM,CAACQ,IAAK;YAAAN,QAAA,EAAEE,OAAO,CAACK;UAAM,CAAO,CAAC,EACjDxB,IAAA,CAACsB,IAAI;YAACR,KAAK,EAAEC,MAAM,CAACQ,IAAK;YAAAN,QAAA,EAAEE,OAAO,CAACM;UAAK,CAAO,CAAC,EAChDzB,IAAA,CAACsB,IAAI;YAACR,KAAK,EAAEC,MAAM,CAACQ,IAAK;YAAAN,QAAA,EAAEE,OAAO,CAACO;UAAQ,CAAO,CAAC,EACnD1B,IAAA,CAACsB,IAAI;YAACR,KAAK,EAAEC,MAAM,CAACQ,IAAK;YAAAN,QAAA,EAAEE,OAAO,CAACQ;UAAa,CAAO,CAAC;QAAA,GAJ/CP,CAKL,CAAC;MAAA,CACR;IAAC,CACQ;EAAC,CACT,CAAC;AAEX,CAAC;AAED,IAAML,MAAM,GAAGtB,UAAU,CAACmC,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDT,IAAI,EAAE;IACJU,MAAM,EAAE,EAAE;IACVD,eAAe,EAAE,MAAM;IACvBE,OAAO,EAAE;EACX,CAAC;EACDT,IAAI,EAAE;IACJU,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAe9B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}