{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Calendar } from 'react-native-calendars';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Eventos = function Eventos() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDate = _useState2[0],\n    setSelectedDate = _useState2[1];\n  var handleDateSelect = function handleDateSelect(day) {\n    setSelectedDate(day.dateString);\n  };\n  var handleEventSchedule = function handleEventSchedule() {\n    console.log(\"Evento programado para la fecha:\", selectedDate);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Mis Eventos\"\n    }), _jsx(Calendar, {\n      onDayPress: handleDateSelect\n    }), selectedDate && _jsxs(View, {\n      style: styles.selectedDateContainer,\n      children: [_jsxs(Text, {\n        children: [\"Fecha seleccionada: \", selectedDate]\n      }), _jsx(Button, {\n        title: \"Programar Evento\",\n        onPress: handleEventSchedule\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    paddingTop: 20\n  },\n  heading: {\n    fontSize: 24,\n    marginBottom: 20\n  },\n  selectedDateContainer: {\n    marginTop: 20,\n    alignItems: 'center'\n  }\n});\nexport default Eventos;","map":{"version":3,"names":["React","useState","View","Text","Button","StyleSheet","Calendar","jsx","_jsx","jsxs","_jsxs","Eventos","_useState","_useState2","_slicedToArray","selectedDate","setSelectedDate","handleDateSelect","day","dateString","handleEventSchedule","console","log","style","styles","container","children","heading","onDayPress","selectedDateContainer","title","onPress","create","flex","alignItems","paddingTop","fontSize","marginBottom","marginTop"],"sources":["C:/Users/fabia/Desktop/Abogados/TI4_ProyectoAbogados/screens/Eventos.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, Button, StyleSheet } from 'react-native';\r\nimport { Calendar } from 'react-native-calendars';\r\n\r\nconst Eventos = () => {\r\n  const [selectedDate, setSelectedDate] = useState(\"\"); \r\n\r\n \r\n  const handleDateSelect = (day) => {\r\n    setSelectedDate(day.dateString);\r\n  };\r\n\r\n\r\n  const handleEventSchedule = () => {\r\n\r\n    console.log(\"Evento programado para la fecha:\", selectedDate);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.heading}>Mis Eventos</Text>\r\n      <Calendar\r\n    \r\n        onDayPress={handleDateSelect}\r\n      />\r\n      {selectedDate && (\r\n        <View style={styles.selectedDateContainer}>\r\n          <Text>Fecha seleccionada: {selectedDate}</Text>\r\n          <Button title=\"Programar Evento\" onPress={handleEventSchedule} />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    paddingTop: 20,\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    marginBottom: 20,\r\n  },\r\n  selectedDateContainer: {\r\n    marginTop: 20,\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default Eventos;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,QAAQ,QAAQ,wBAAwB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,IAAAC,SAAA,GAAwCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAGpC,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,GAAG,EAAK;IAChCF,eAAe,CAACE,GAAG,CAACC,UAAU,CAAC;EACjC,CAAC;EAGD,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAEhCC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEP,YAAY,CAAC;EAC/D,CAAC;EAED,OACEL,KAAA,CAACR,IAAI;IAACqB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BlB,IAAA,CAACL,IAAI;MAACoB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,EAAC;IAAW,CAAM,CAAC,EAC/ClB,IAAA,CAACF,QAAQ;MAEPsB,UAAU,EAAEX;IAAiB,CAC9B,CAAC,EACDF,YAAY,IACXL,KAAA,CAACR,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACK,qBAAsB;MAAAH,QAAA,GACxChB,KAAA,CAACP,IAAI;QAAAuB,QAAA,GAAC,sBAAoB,EAACX,YAAY;MAAA,CAAO,CAAC,EAC/CP,IAAA,CAACJ,MAAM;QAAC0B,KAAK,EAAC,kBAAkB;QAACC,OAAO,EAAEX;MAAoB,CAAE,CAAC;IAAA,CAC7D,CACP;EAAA,CACG,CAAC;AAEX,CAAC;AAED,IAAMI,MAAM,GAAGnB,UAAU,CAAC2B,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,UAAU,EAAE;EACd,CAAC;EACDR,OAAO,EAAE;IACPS,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDR,qBAAqB,EAAE;IACrBS,SAAS,EAAE,EAAE;IACbJ,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAevB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}