{"ast":null,"code":"import isUndefined from 'lodash/isUndefined';\nimport isDate from 'lodash/isDate';\nimport isString from 'lodash/isString';\nimport isNumber from 'lodash/isNumber';\nimport XDate from 'xdate';\nvar _require = require(\"../dateutils\"),\n  getLocale = _require.getLocale;\nvar _require2 = require(\"../interface\"),\n  padNumber = _require2.padNumber,\n  toMarkingFormat = _require2.toMarkingFormat;\nexport function getCalendarDateString(date) {\n  if (!isUndefined(date)) {\n    if (isDate(date) && !isNaN(date.getFullYear())) {\n      return date.getFullYear() + '-' + padNumber(date.getMonth() + 1) + '-' + padNumber(date.getDate());\n    } else if (isString(date)) {\n      return toMarkingFormat(new XDate(date, false));\n    } else if (isNumber(date)) {\n      return toMarkingFormat(new XDate(date, true));\n    }\n    throw 'Invalid Date';\n  }\n}\nexport function getDefaultLocale() {\n  return getLocale();\n}\nexport default {\n  getCalendarDateString: getCalendarDateString,\n  getDefaultLocale: getDefaultLocale\n};","map":{"version":3,"names":["isUndefined","isDate","isString","isNumber","XDate","_require","require","getLocale","_require2","padNumber","toMarkingFormat","getCalendarDateString","date","isNaN","getFullYear","getMonth","getDate","getDefaultLocale"],"sources":["C:/Users/Fernanda/Desktop/Abogados/TI4_ProyectoAbogados/node_modules/react-native-calendars/src/services/index.js"],"sourcesContent":["import isUndefined from 'lodash/isUndefined';\r\nimport isDate from 'lodash/isDate';\r\nimport isString from 'lodash/isString';\r\nimport isNumber from 'lodash/isNumber';\r\nimport XDate from 'xdate';\r\nconst { getLocale } = require('../dateutils');\r\nconst { padNumber, toMarkingFormat } = require('../interface');\r\nexport function getCalendarDateString(date) {\r\n    if (!isUndefined(date)) {\r\n        if (isDate(date) && !isNaN(date.getFullYear())) {\r\n            return date.getFullYear() + '-' + padNumber(date.getMonth() + 1) + '-' + padNumber(date.getDate());\r\n        }\r\n        else if (isString(date)) {\r\n            // issue with strings and XDate's utc-mode - returns one day before\r\n            return toMarkingFormat(new XDate(date, false));\r\n        }\r\n        else if (isNumber(date)) {\r\n            return toMarkingFormat(new XDate(date, true));\r\n        }\r\n        throw 'Invalid Date';\r\n    }\r\n}\r\nexport function getDefaultLocale() {\r\n    return getLocale();\r\n}\r\nexport default {\r\n    getCalendarDateString,\r\n    getDefaultLocale\r\n};\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,IAAAC,QAAA,GAAsBC,OAAO,eAAe,CAAC;EAArCC,SAAS,GAAAF,QAAA,CAATE,SAAS;AACjB,IAAAC,SAAA,GAAuCF,OAAO,eAAe,CAAC;EAAtDG,SAAS,GAAAD,SAAA,CAATC,SAAS;EAAEC,eAAe,GAAAF,SAAA,CAAfE,eAAe;AAClC,OAAO,SAASC,qBAAqBA,CAACC,IAAI,EAAE;EACxC,IAAI,CAACZ,WAAW,CAACY,IAAI,CAAC,EAAE;IACpB,IAAIX,MAAM,CAACW,IAAI,CAAC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,WAAW,CAAC,CAAC,CAAC,EAAE;MAC5C,OAAOF,IAAI,CAACE,WAAW,CAAC,CAAC,GAAG,GAAG,GAAGL,SAAS,CAACG,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGN,SAAS,CAACG,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC;IACtG,CAAC,MACI,IAAId,QAAQ,CAACU,IAAI,CAAC,EAAE;MAErB,OAAOF,eAAe,CAAC,IAAIN,KAAK,CAACQ,IAAI,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC,MACI,IAAIT,QAAQ,CAACS,IAAI,CAAC,EAAE;MACrB,OAAOF,eAAe,CAAC,IAAIN,KAAK,CAACQ,IAAI,EAAE,IAAI,CAAC,CAAC;IACjD;IACA,MAAM,cAAc;EACxB;AACJ;AACA,OAAO,SAASK,gBAAgBA,CAAA,EAAG;EAC/B,OAAOV,SAAS,CAAC,CAAC;AACtB;AACA,eAAe;EACXI,qBAAqB,EAArBA,qBAAqB;EACrBM,gBAAgB,EAAhBA;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}